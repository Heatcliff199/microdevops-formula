{#
This file should be included in pillar, which sets the following:
{% set gitlab_url = "https://gitlab.example.com/" %}
{% set gitlab_admin_token = "xxxxxxxxxxxxxxxxxxxx" %}
{% set gitlab_register_token = "xxxxxxxxxxxxxxxxxxxx" %}
{% set gitlab_register_opts = "--locked --docker-privileged --docker-image 'docker:stable'" %}
{% set gitlab_runner_name = "runner1.example.com" %}
{% set gitlab_runner_executor = "docker" %}
{% set gitlab_runner_tags = "dind,runner1.example.com" %}
{% set gitlab_runner_concurrency = "50" %}
{% set gitlab_runner_projects = [
  'myorg/dev/myproject',
] %}

And then:
{% include 'pkg/gitlab-runner.jinja' with context %}
#}

pkg:
  gitlab-runner:
    when: 'PKG_AFTER_DEPLOY'
    states:
      - pkgrepo.managed:
          1:
            - humanname: Gitlab Runner Repository
            - name: deb https://packages.gitlab.com/runner/gitlab-runner/{{ grains['os']|lower }}/ {{ grains['oscodename'] }} main
            - file: /etc/apt/sources.list.d/gitlab-runner.list
            - key_url: https://packages.gitlab.com/runner/gitlab-runner/gpgkey
      - pkg.latest:
          1:
            - refresh: True
            - pkgs:
              - gitlab-runner
              - jq
              - curl
      - user.present:
          1:
            - name: gitlab-runner
            - groups:
                - docker
      - cmd.run:
          1:
            - name: |
                gitlab-runner unregister --name "{{ gitlab_runner_name }}" || true
            - runas: 'root'
      - file.managed:
          1:
            - name: '/etc/gitlab-runner/config.toml'
            - contents: |
                concurrent = {{ gitlab_runner_concurrency }}
                check_interval = 0

                [session_server]
                  session_timeout = 1800
      - cmd.run:
          1:
            - name: |
                gitlab-runner register \
                  --non-interactive \
                  --url "{{ gitlab_url }}" \
                  --registration-token "{{ gitlab_register_token }}" \
                  --executor "{{ gitlab_runner_executor }}" \
                  --name "{{ gitlab_runner_name }}" \
                  --tag-list "{{ gitlab_runner_tags }}" \
                  {{ gitlab_register_opts }}
            - runas: 'root'
{% for project in gitlab_runner_projects %}
      - cmd.run:
          1:
            - name: |
                RUNNER_ID=$(curl --silent --header "PRIVATE-TOKEN: {{ gitlab_admin_token }}" "{{ gitlab_url }}/api/v4/runners/all" | jq '.[] | select(.description=="{{ gitlab_runner_name }}") | .id') \
                  && curl --silent --request POST --header "PRIVATE-TOKEN: {{ gitlab_admin_token }}" \
                  "{{ gitlab_url }}/api/v4/projects/{{ project | replace("/","%2F") }}/runners" --form "runner_id=${RUNNER_ID}"
            - runas: 'root'
            - shell: '/bin/bash'
{% endfor %}
