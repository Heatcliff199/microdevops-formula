##############################################
##### FOR LUCH WITH SYSTEMD

{%- set path_prefix = '/opt/loki' %}
{%- set version = '2.7.1' %}
{%- set name = 'loki-reader1.example.com' %}
loki:
  extra_args: '-target=read'
  name: {{ name }}
  path_prefix: {{ path_prefix }}
  binary:
    link: https://github.com/grafana/loki/releases/download/v{{ version  }}/loki-linux-amd64.zip
  config:
    memberlist:
      bind_addr: 1.2.3.4
      join_members:
        - loki-reader1.example.com
        - loki-writer1.example.com
      dead_node_reclaim_time: 30s    # How soon can dead node's name be reclaimed with new address. Defaults to 0, which is disable
      gossip_to_dead_nodes_time: 15s # How long to keep gossiping to dead nodes, to give them chance to refute their death. Uses memberlist LAN defaults if 0.
      left_ingesters_timeout: 30s    # How long to keep LEFT ingesters in the ring
      bind_port: 7946
      gossip_interval: 2s
    auth_enabled: true
    server:
      http_listen_port: 3100
      grpc_listen_port: 9095
      http_server_read_timeout: 40m
      http_server_write_timeout: 40m
      http_server_idle_timeout: 40m
      log_level: info
    common:
      instance_interface_names:
      - eth0
      compactor_address: http://loki-writer1.example.com:3100
      path_prefix: {{ path_prefix }}
      replication_factor: 1
      ring:
        kvstore:
          store: memberlist
      storage:
        s3:
          endpoint: loki-minio1.example.com:9000
          insecure: false
          bucketnames: loki-data
          access_key_id: loki
          secret_access_key: supersecret
          s3forcepathstyle: true
    schema_config:
      configs:
      - from: '2020-08-01'
        store: boltdb-shipper
        object_store: s3
        schema: v11
        index:
          prefix: index_
          period: 24h
    storage_config:
      boltdb_shipper:
        shared_store: s3
        active_index_directory: {{ path_prefix }}/index
        cache_location: {{ path_prefix }}/boltdb-cache
      index_cache_validity: 1m
      index_queries_cache_config:
        embedded_cache:
          enabled: true
          max_size_mb: 100
    limits_config:
      reject_old_samples: false
      ingestion_rate_mb: 10
      ingestion_burst_size_mb: 20
      per_stream_rate_limit: 10M
      per_stream_rate_limit_burst: 20M
      query_timeout: 40m
      # Split queries by a time interval and execute in parallel. The value 0 disables splitting by time. This also determines how cache keys are chosen when result caching is enabled
      split_queries_by_interval: 20s
      # Enforce every sample has a metric name
      enforce_metric_name: false
      # Most recent allowed cacheable result per-tenant, to prevent caching very recent results that might still be in flux
      max_cache_freshness_per_query: 10m
    compactor:
      working_directory: {{ path_prefix }}/boltdb-compactor
      retention_enabled: true
      shared_store: s3
    ingester:
      lifecycler:
        join_after: 10s
        observe_period: 5s
        final_sleep: 0s
      chunk_idle_period: 1m
      wal:
        enabled: true
        dir: {{ path_prefix }}/wal
        replay_memory_ceiling: 2945826KB
      # The maximum duration of a timeseries chunk in memory. If a timeseries runs for longer than this, the current chunk will be flushed to the store and a new chunk created
      max_chunk_age: 1m
      chunk_retain_period: 30s
      chunk_encoding: snappy
      chunk_target_size: 1572864
      chunk_block_size: 262144
      flush_op_timeout: 10s
    chunk_store_config:
      chunk_cache_config:
        embedded_cache:
          enabled: true
          max_size_mb: 100
      write_dedupe_cache_config:
        embedded_cache:
          enabled: true
          max_size_mb: 100
    query_range:
      align_queries_with_step: true
      max_retries: 5
      parallelise_shardable_queries: true
      cache_results: true
      results_cache:
        cache:
          embedded_cache:
            enabled: true
            max_size_mb: 100
    query_scheduler:
      # Maximum number of outstanding requests per tenant per query-scheduler. In-flight requests above this limit will fail with HTTP response status code 429
      max_outstanding_requests_per_tenant: 1024
    querier:
      # Maximum lookback beyond which queries are not sent to ingester. 0 means all queries are sent to ingester.
      query_ingesters_within: 2h
      engine:
        timeout: 41m0s
    frontend_worker:
      frontend_address: loki-front1.example.com:9095
    frontend:
      log_queries_longer_than: 5s
      compress_responses: true
      max_outstanding_per_tenant: 2048






##############################################
##### FOR LUCH IN DOCKER
loki:
  acme_account: example.com
  image: grafana/loki:2.5.0
  name: loki.example.com
  auth_basic:
    username: <user>
    password: <password>
  config:
    auth_enabled: false
    server:
      http_listen_port: 3100
      grpc_listen_port: 9096
    common:
      path_prefix: /tmp/loki
      storage:
        filesystem:
          chunks_directory: /tmp/loki/chunks
          rules_directory: /tmp/loki/rules
      replication_factor: 1
      ring:
        instance_addr: 127.0.0.1
        kvstore:
          store: inmemory
    schema_config:
      configs:
        - from: 2020-10-24
          store: boltdb-shipper
          object_store: filesystem
          schema: v11
          index:
            prefix: index_
            period: 24h
    ruler:
      alertmanager_url: http://localhost:9093
