{% set domain = 'example.com' %}
haproxy:
  ppa: 'vbernat/haproxy-2.6'
  ssl:
    acme_configs:
      - name: {{ domain }}                     #### acme config name. Example: pillar['acme'].keys() | first
        pemdir: /opt/acme/cert/{{ domain }}/haproxy/
        domains:
          - {{ domain }}
          - another.{{ domain }}
          - another-{{ domain }}
  config: |
      global
      log /dev/log    local0
      log /dev/log    local1 notice
      chroot /var/lib/haproxy
      stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
      stats timeout 30s
      user haproxy
      group haproxy
      daemon
    
      # Default SSL material locations
      ca-base /etc/ssl/certs
      crt-base /etc/ssl/private
    
      # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
      ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
      ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
      ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets
    
    defaults
      log     global
      mode    http
      option  httplog
      option  dontlognull
      timeout connect 5000
      timeout client  50000
      timeout server  50000
      errorfile 400 /etc/haproxy/errors/400.http
      errorfile 403 /etc/haproxy/errors/403.http
      errorfile 408 /etc/haproxy/errors/408.http
      errorfile 500 /etc/haproxy/errors/500.http
      errorfile 502 /etc/haproxy/errors/502.http
      errorfile 503 /etc/haproxy/errors/503.http
      errorfile 504 /etc/haproxy/errors/504.http

    listen stats
      bind *:8080 ssl crt /opt/acme/cert/{{ domain }}/haproxy/
      stats enable
      stats auth admin:p@$$w0Rd
      stats admin if TRUE
      stats hide-version
      stats refresh 3s
      stats show-node
      stats uri /

    listen mysql-slave1.prd.{{ domain }}
      bind 0.0.0.0:3306
      mode tcp
      option tcplog
      server mysql-slave1.prd.{{ domain }} 1.2.3.4:3306



### LEGACY

haproxy:
  ppa: 'vbernat/haproxy-2.6'
  ssl:
    domain: {{ grains['id'] }}
    cert: /opt/acme/cert/{{ grains['id'] }}/{{ grains['id'] }}.key
    key: /opt/acme/cert/{{ grains['id'] }}/fullchain.cer
    pem: /opt/acme/cert/{{ grains['id'] }}/{{ grains['id'] }}.pem      #### USE ONLY pillar["haproxy"]["ssl"]["pem"]     or  pillar["haproxy"]["ssl"]["pemdir"]
    #pemdir: /opt/acme/cert/{{ grains['id'] }}/pem/                    #### USE ONLY pillar["haproxy"]["ssl"]["pemdir"]  or  pillar["haproxy"]["ssl"]["pem"]
  config: |
      global
      log /dev/log    local0
      log /dev/log    local1 notice
      chroot /var/lib/haproxy
      stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
      stats timeout 30s
      user haproxy
      group haproxy
      daemon
    
      # Default SSL material locations
      ca-base /etc/ssl/certs
      crt-base /etc/ssl/private
    
      # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
      ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
      ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
      ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets
    
    defaults
      log     global
      mode    http
      option  httplog
      option  dontlognull
      timeout connect 5000
      timeout client  50000
      timeout server  50000
      errorfile 400 /etc/haproxy/errors/400.http
      errorfile 403 /etc/haproxy/errors/403.http
      errorfile 408 /etc/haproxy/errors/408.http
      errorfile 500 /etc/haproxy/errors/500.http
      errorfile 502 /etc/haproxy/errors/502.http
      errorfile 503 /etc/haproxy/errors/503.http
      errorfile 504 /etc/haproxy/errors/504.http

    listen stats
      bind *:8080 ssl crt /opt/acme/cert/example.com/example.com.pem
      stats enable
      stats auth admin:p@$$w0Rd
      stats admin if TRUE
      stats hide-version
      stats refresh 3s
      stats show-node
      stats uri /

    listen mysql-slave1.prd.example.com
      bind 0.0.0.0:3306
      mode tcp
      option tcplog
      server mysql-slave1.prd.example.com 1.2.3.4:3306
