{%
set nodes = {
  'vault1.example.com': '1.2.3.4',
  'vault2.example.com': '2.3.4.5',
  'vault3.example.com': '3.4.5.6'
}
%}

ufw:
  import_ufw_simple: True
  allow:
    cluster_vault:
      proto: 'tcp'
      from:
        {%- for key, val in nodes.items() %}{%- if grains['id'] != key %}
        {{ key }}: {{ val }}
        {%- endif %}{%- endfor %}
      to_port: '8200,8201'

vault:
  privileged_token: 'abc.XXXXXXXXXXXXXXXXXXXXXXXX'
  unseal_keys:
    - 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA='
    - 'BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB='
    - 'CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC='
    - 'DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD='
    - 'EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE='
  name: {{ grains['id'] }}
  acme:
    enable: true
    domain: {{ grains['fqdn'] }}
  {%- if storage == "raft" %}
  snapshots:
    enable_raft: True
  {%- endif %}
  audit:
    enable: true
    logfile: /var/log/vault_audit.log
  env_vars:
    VAULT_ADDR: "https://{{ grains['fqdn'] }}:8200"
    VAULT_API_ADDR: "https://{{ grains['fqdn'] }}:8200"
    VAULT_CLUSTER_ADDR: "https://{{ grains['fqdn'] }}:8201"
  config: |
    ui = true
    storage "raft" {
      performance_multiplier = 1
      path = "/vault/data"
      node_id = "{{ grains['id'] }}"
      {%- for key, val in vault_nodes.items() %}{%- if grains['id'] != key %}
      retry_join {
        leader_api_addr = "https://{{ key }}:8200"
      }{%- endif %}{%- endfor %}
    }
    listener "tcp" {
      address = "0.0.0.0:8200"
      cluster_address = "0.0.0.0:8201"
      tls_disable = "false"
      tls_cert_file = "/vault/certs/vault_{{ grains['id'] }}_fullchain.cer"
      tls_key_file  = "/vault/certs/vault_{{ grains['id'] }}_key.key"
       telemetry {
        unauthenticated_metrics_access = true
      }
    }
    telemetry {
      disable_hostname = true
      prometheus_retention_time = "12h"
    }
    enable_response_header_hostname = true
    enable_response_header_raft_node_id = true
   

###############################################################
## SIMPLE PILLAR FOR LEADER NODE WITH INTEGRATED RAFT STORAGE
###############################################################
{% set nodename = grains["id"] %}

vault:
  privileged_token: 'abc.XXXXXXXXXXXXXXXXXXXXXXXX'
  unseal_keys:
    - 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA='
    - 'BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB='
    - 'CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC='
    - 'DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD='
    - 'EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE='
  acme:
    enable: true
    domain: {{ nodename }}
  snapshots:
    enable_raft: True
  audit:
    enable: true
    logfile: /var/log/vault_audit.log
  env_vars:
    VAULT_ADDR: "https://{{ nodename }}:8200"
  config: |
    ui = true
    storage "raft" {
      path = "/vault/data"
      node_id = "{{ nodename }}"
    }
    listener "tcp" {
      address = "0.0.0.0:8200"
      cluster_address = "0.0.0.0:8201"
      tls_disable = "false"
      tls_cert_file = "/vault/certs/vault_{{ nodename }}_fullchain.cer"
      tls_key_file  = "/vault/certs/vault_{{ nodename }}_key.key"
       telemetry {
        unauthenticated_metrics_access = true
      }
    }
    telemetry {
      disable_hostname = true
      prometheus_retention_time = "12h"
    }
    enable_response_header_hostname = true
    enable_response_header_raft_node_id = true
