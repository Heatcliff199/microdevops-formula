# vi: set ft=yaml:

rsnapshot_backup:
  #python: True # optional, switch pipeline to run py version of rsnapshot_backup, sh+awk is default version for now
  sources:
    srv1.example.com:
      - type: ... # gereic params for all types
        #validate_hostname: False # optional, disable remote ssh hostname check (for backup types that use ssh)
                              # good if you need to to check if backup storage dir is mounted, avoid using single and double quotes
                              # beware - it will be executed for each item in data, so make separate backup item to exec only once
        #rsync_args: --exclude=/root/junk_folder --exclude=/opt/another_junk_folder --some-arg # optional, args of rsync inside rsnapshot, useful for excludes or rsync tuning
        #connect_user: toor # optional, root by default, user for ssh or native rsync connect
        #exec_before_rsync: # optional, script to execute via ssh before rsync, avoid using single and double quotes
                            # beware - it will be executed for each item in data, so make separate backup item to exec only once
        #exec_after_rsync: # optional, script to execute via ssh after rsync, avoid using single and double quotes
                           # beware - it will be executed for each item in data, so make separate backup item to exec only once
        #before_backup_check: # optional, script to execute locally before backup, backup will be made only if executed successfully
        #retain_hourly: N # optional, hourly rotations disabled by default
        #retain_daily: N # optional, override default value 7, minimum 2 on first level of backup
        #retain_weekly: N # optional, override default value 4, minimum 1 on second level of backup and further
        #retain_monthly: N # optional, override default value 3, minimum 1 on second level of backup and further
        checks: # all checks are optional
          - type: .backup # check special .backup files in data roots, files are put there before backup by rsnapshot_backup.put_check_files
          - type: s3/.backup # put .backup file to s3 bucket for the same purposes
            s3_bucket: bucket_name
            s3_path: path_within_bucket
            s3_keyid: xxx
            s3_key: yyy
          - type: FILE_AGE # check newest file age and other params, useful to monitor that fresh dumps exist
            last_file_age: N # files can be no more N days old
            min_file_size: N # files can be no less than N size in bytes
            files_total: N # there should be no less than N files of this type
            file_type: 'regexp' # regexp which will be matched agains unix command 'file' output
            files_mask: 'regexp' # regexp for find command
        backups: # mandatory
          - host: backup1.example.com # backup from remote server
            path: /var/backups/srv1.example.com # where to store backup
            #connect: 1.2.3.4:22 # optional, ssh connect with ip or name and port
            #connect: 1.2.3.4:873 # optional, native rsync connect with ip or name and port, if not used rsync connects to 873 port by default
            #priority: -1 # optional, priority (order) of this backup in config on the backup server, any signed integer, items are sorted by priority from minus to plus
                          # default priority is 0, if you need some item to be first in backup order, just add priority: -1, for example
            #before_backup_check: # optional, overrides before_backup_check definition of higher level
            #retain_hourly: N # optional, overrides retain definition of higher level
            #retain_daily: N # optional, overrides retain definition of higher level
            #retain_weekly: N # optional, overrides retain definition of higher level
            #retain_monthly: N # optional, overrides retain definition of higher level
          - host: srv1.example.com # backup from server itself (local backup)
            path: /var/backups/srv1.example.com
      - type: RSYNC_SSH # rsync over ssh
        data:
          - UBUNTU # special meaning, expands to list ['/etc','/home','/root','/var/spool/cron','/var/lib/dpkg','/usr/local','/opt/sysadmws']
          - DEBIAN # special meaning, expands to list ['/etc','/home','/root','/var/spool/cron','/var/lib/dpkg','/usr/local','/opt/sysadmws']
          - CENTOS # special meaning, expands to list ['/etc','/home','/root','/var/spool/cron','/var/lib/rpm','/usr/local','/opt/sysadmws']
          - /some/path
        #exclude: # optional, exclude some components from expanded list
        #  - /root
      - type: RSYNC_NATIVE # native rsync proto, mainly to backup Windows
        data:
          - /Share1/Some/Path
          - /Share2/Other/Path
        checks:
          - type: .backup # .backup can have path modifiers per data item, useful for putting check files on Windows
            data: /Share1/Some/Path # optional, set params for specific data item
            path: C:\Some Actual\Windows Path\Some\Path # dot backup files can have real path substituted by matching data key
          - type: .backup
            data: /Share2/Other/Path # optional, set params for specific data item
            path: D:\Completely Another\Windows Path\Other\Path # dot backup files can have real path substituted by matching data key
          - type: FILE_AGE # FILE_AGE also can have path modifiers per data item
            data: /Share1/Some/Path # optional, set params for specific data item
            last_file_age: 3
            min_file_size: 1000000000
            files_total: 3
            file_type: '(data|executable)'
            files_mask: '123.+_321\..+\.DOC'
        connect_password: secret # mandatory, plain text native rsync auth
        #native_txt_check: True # optional, check for .backup text file in the root of source
                                # useful if you want to ensure the data is present and not sync empty folder if removable disk gone for example
        #native_10h_limit: True # optional, limit time for the execution of rsync to 10 hours
      - type: MYSQL_SSH # dump mysql over ssh, then rsync dump folder over ssh
        data:
          - ALL # special meaning, expands to all databases available
          - db1
        #exclude: # optional, exclude some databases from backup
        #  - db1
        checks: # optional, MYSQL_SSH supports only MYSQL check type
          - type: MYSQL # check dumps for freshness by looking into the signature and check real data inside dumps
            empty_db: # database list to exclude from checking real data in dumps
              - test
        #mysql_noevents: True # optional, remove --events from dump cmd
        #mysqldump_args: # optional, pass additional arguments to mysqldump
        #  --ignore-table=dbname.table1
        #  --ignore-table=dbname.table2
        #mysql_dump_dir: /var/backups/mysql # optional, change default /var/backups/mysql dump dir location
      - type: POSTGRESQL_SSH # dump postgresql over ssh, then rsync dump folder over ssh
        data:
          - ALL # special meaning, expands to all databases available
          - db1
        #exclude: # optional, exclude some databases from backup
        #  - db1
        checks: # optional, POSTGRESQL_SSH supports only POSTGRESQL check type
          - type: POSTGRESQL # check dumps for freshness by looking into the signature and check real data inside dumps
            empty_db: # database list to exclude from checking real data in dumps
              - postgres
              - template0
              - template1
        #pg_dump_args: # optional, pass additional arguments to pg_dump_args
        #postgresql_noclean: True # optional, remove --clean from pg dump
        #postgresql_dump_dir: /var/backups/postgresql # optional, change default /var/backups/postgresql dump dir location
      - type: MONGODB_SSH # dump mongodb over ssh, then rsync dump folder over ssh
        data:
          - ALL # special meaning, expands to all databases available
          - db1
        #exclude: # optional, exclude some databases from backup
        #  - db1
        checks: # optional, MONGODB_SSH supports only MONGODB check type
          - type: MONGODB # check dumps for freshness by looking into the signature and check real data inside dumps
            empty_db: # database list to exclude from checking real data in dumps
              - config
        #mongo_args: --username root --password password --authenticationDatabase admin # optional, args for mongo (to list databases) and mongodump (to make dump), usually to add auth params. The user (root) must have a role "root"
        #mongodb_dump_dir: /var/backups/mongodb # optional, change default /var/backups/mongodb dump dir location
      - type: SUPPRESS_COVERAGE # special stub type for rsnapshot_backup.check_coverage error suppression
        data: # list folders or db types here
          - UBUNTU
          - /test
          - POSTGRESQL
          - MYSQL
          - MONGODB
        local_backups_suppress_reason: Some reason # will suppress local backup not found error if set, reason text is just for documentation purposes
        remote_backups_suppress_reason: Some reason # will suppress remote backup not found error if set, reason text is just for documentation purposes
